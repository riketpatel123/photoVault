{"version":3,"sources":["comps/Footer.js","firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["Footer","className","firebaseConfig","apiKey","process","FIREBASE_API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_APP_ID","firebase","initializeApp","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","motion","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d38272a2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className='footer-detail'>\n      <p>2023 HP PhotoBooth All rights reserved</p>\n    </div>\n  );\n};\n\nexport default Footer;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"firegram-d1340.firebaseapp.com\",\n  projectId: \"firegram-d1340\",\n  storageBucket: \"firegram-d1340.appspot.com\",\n  messagingSenderId: \"375861097503\",\n  appId: process.env.FIREBASE_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <motion.div className=\"img-wrap\" key={doc.id}\n          layout\n          whileHover={{ opacity: 1 }}\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img src={doc.url} alt=\"uploaded pic\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\"\n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  );\n};\n\nexport default Modal;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>PhotoBooth</h1>\n      <h2>Your Pictures</h2>\n      <p>Live life take pictures relive memories repeat</p>\n    </div>\n  );\n};\n\nexport default Title;","\nimport { useEffect, useState } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n\n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (error) => {\n      setError(error);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n};\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\" \");\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpeg)');\n\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={changeHandler} />\n        <span>+</span>\n      </label>\n      <div className='ourput'>\n        {error && <div className='error'>{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;","import React, { useState } from 'react';\nimport Footer from './comps/Footer';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}